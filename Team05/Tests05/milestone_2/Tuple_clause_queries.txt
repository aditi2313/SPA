1 - 2 args with assignment and variable
assign a; variable v;
Select <a, v> such that Modifies(a, v)
1 help, 4 me, 5 finish, 8 me, 11 x
5000
2 - 2 args with Uses
variable v1, v2;
Select <v1, v2> such that Uses(1, v1) and Uses(5, v2)
finish apple, me apple
5000
3 - 2 args with Uses
variable v1, v2;
Select <v1, v2> such that Uses(1, v1) and Uses(5, v2)
finish apple,me apple 
5000
4 - tuple with multiple types
variable v; procedure p, q, r; assign a;
Select <p, q, r, v> such that Calls(p, q) and Calls(q, r) pattern a(v, "x")
name second third x
5000
5 - tuple with multiple types
variable v; procedure p, q, r; assign a;
Select <p, q, r, v> such that Calls(p, q) and Calls(q, r) pattern a(v, _"x"_)
name second third x
5000
5 - tuple with parent and follows
variable v; stmt s; assign a;
Select<s,v> such that Parent(s, 3) and Modifies(a, v)
2 finish, 2 me, 2 help, 2 x
5000
6 - tuple with none result
variable v1, v2; stmt s;
Select<v1, v2, s> such that Modifies(s, v1) and Modifies(s, v2) and Parent(s, 1)
none
5000
7 - tuple with select that are not all synonyms
assign a; print pn; procedure p, q; variable v;
Select<p, pn> such that Calls(p, q) and Uses (pn, v) 
name 12, second 12
5000
8 - tuple with synonyms that are unassigned
assign a;print pn; procedure p; variable v;
Select<p, pn, x> such that Calls(p, q) and Uses (pn, v) 
SemanticError
5000